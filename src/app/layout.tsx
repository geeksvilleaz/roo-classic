import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import MarketingFooter from '@/components/marketing-footer';
import MarketingHeader from '@/components/marketing-header';
import { headers } from 'next/headers';
import MarketingHero from '@/components/marketing-hero';
import { Amplify } from 'aws-amplify';
import outputs from '@/../amplify_outputs.json';
import AmplifyProvider from '@/components/amplify-provider';

Amplify.configure(outputs);

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = await headers();
  const pathname = headersList.get('x-pathname')?.substring(1) || 'home';

  const isMarketingPage =
    !pathname.startsWith('admin') && !pathname.startsWith('u');

  const backgroundStyle = isMarketingPage
    ? {
        backgroundImage: `url('/assets/images/bg/${pathname}-bg.jpg')`,
      }
    : {};

  const className = `antialiased text-gray-800 bg-no-repeat bg-cover bg-top`;

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${isMarketingPage && className}`}
        style={backgroundStyle}
      >
        <AmplifyProvider>
          {isMarketingPage ? (
            <>
              <MarketingHeader />
              <MarketingHero pid={pathname} />

              {children}

              <MarketingFooter />
            </>
          ) : (
            <>{children}</>
          )}
        </AmplifyProvider>
      </body>
    </html>
  );
}
